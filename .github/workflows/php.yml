# name: PHP Composer

# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     branches: [ "master" ]

# permissions:
#   contents: read

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout Code
#       uses: actions/checkout@v3

#     - name: Set up PHP
#       uses: shivammathur/setup-php@v2
#       with:
#         php-version: 8.3

#     - name: Copy .env file
#       run: |
#         cp .env.ci .env

#     # - name: Validate composer.json and composer.lock
#     #   run: composer validate --strict

#     - name: Install Composer Dependencies
#       run: composer install --optimize-autoloader --no-dev --no-progress --no-interaction --prefer-dist

#     # - name: Intall Node.js
#     #   uses: actions/setup-node@v3
#     #   with:
#     #     node-version: '20'

#     # - name: Install NPM Dependencies
#     #   run: npm run build

#     # - name: Run crud test
#     #   run:
#     #     php artisan test

#     # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
#     # Docs: https://getcomposer.org/doc/articles/scripts.md

#     # - name: Run test suite
#     #   run: composer run-script test

name: Laravel

on:
  push:
    branches: ['master', 'beta']
  pull_request:
    branches: ['master', 'beta']

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.3'
      - uses: actions/checkout@v4
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test
